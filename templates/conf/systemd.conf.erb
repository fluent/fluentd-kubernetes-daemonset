<% target = (dockerfile.split("/").last.split("-").last) %>
<% is_v1 = version.split("-").first.start_with?('v1') %>

# AUTOMATICALLY GENERATED
# DO NOT EDIT THIS FILE DIRECTLY, USE /templates/conf/systemd.conf.erb

# Logs from systemd-journal for interesting services.
<source>
  @type systemd
  @id in_systemd_kubelet
  filters [{ "_SYSTEMD_UNIT": "kubelet.service" }]
<% if is_v1 %>
  <storage>
    @type local
    persistent true
    path /var/log/fluentd-journald-kubelet-cursor.json
  </storage>
<% if target == "elasticsearch" %>
  <entry>
    fields_strip_underscores true
  </entry>
<% end %>
<% else %>
  pos_file /var/log/fluentd-journald-kubelet.pos
<% if target == "elasticsearch" %>
  strip_underscores true
<% end %>
<% end %>
  read_from_head true
  tag kubelet
</source>

# Logs from docker-systemd
<source>
  @type systemd
  @id in_systemd_docker
  filters [{ "_SYSTEMD_UNIT": "docker.service" }]
<% if is_v1 %>
  <storage>
    @type local
    persistent true
    path /var/log/fluentd-journald-docker-cursor.json
  </storage>
<% if target == "elasticsearch" %>
  <entry>
    fields_strip_underscores true
  </entry>
<% end %>
<% else %>
  pos_file /var/log/fluentd-journald-docker.pos
<% if target == "elasticsearch" %>
  strip_underscores true
<% end %>
<% end %>
  read_from_head true
  tag docker.systemd
</source>

# Logs from systemd-journal for interesting services.
<source>
  @type systemd
  @id in_systemd_bootkube
  filters [{ "_SYSTEMD_UNIT": "bootkube.service" }]
<% if is_v1 %>
  <storage>
    @type local
    persistent true
    path /var/log/fluentd-journald-bootkube-cursor.json
  </storage>
<% if target == "elasticsearch" %>
  <entry>
    fields_strip_underscores true
  </entry>
<% end %>
<% else %>
  pos_file /var/log/fluentd-journald-bootkube.pos
<% if target == "elasticsearch" %>
  strip_underscores true
<% end %>
<% end %>
  read_from_head true
  tag bootkube
</source>

<% case target when "papertrail"%>
<filter bootkube>
  @type record_transformer
  @id filter_rt_bootkube
  enable_ruby true
  <record>
    hostname #{ENV['FLUENT_HOSTNAME']}
    program kube-bootkube
    severity info
    facility local0
    message ${record['log']}
  </record>
</filter>
<% end %>
